## Team Name: Backline
## Members: Brandon Linkus & Justin Cornett

# Test 1a - Pass/Happy
* Precondition: Less than 5 missiles are currently on the screen
* Action: user clicks right mouse button
* Postcondition: missile fires

# Test 1b - Pass/Happy
* Precondition: Less than 5 missiles are currently on the screen
* Action: user clicks spacebar
* Postcondition: missile fires

# Test 1c - Pass/Happy
* Precondition: 5 missiles are on the screen
* Action: User clicks right mouse button
* Postcondition: no missiles are fired

# Test 1c - Fail/Unhappy
* Precondition: 5 missiles are on the screen
* Action: User clicks right spacebar
* Postcondition: no missiles are fired

# Test 1d - Pass/Happy
* Precondition: Active missile on the screen
* Action: Missile goes off screen
* Postcondition: Missile becomes inactive

# Test 1e - Pass/Happy
* Precondition: No missiles have been fired and none are on the screen
* Action: Fire more than 1 missile
* Postcondition: All missiles share the same speed

# Test 1f - Pass/Happy
* Precondition: Player is located at the bottom center of the screen
* Action: User clicks right mouse button or spacebar
* Postcondition: Missile is fired

# Test 1f - Fail/Unhappy
* Precondition: Player is not located at the bottom center of the screen
* Action: User clicks right mouse button or spacebar
* Postcondition: A missile is not fired

# Test 1g - Pass/Happy
* Precondition: No missile has been launched
* Action: User clicks right mouse or spacebar
* Postcondition: Missile does not change direction

# Test 1h - Pass/Happy
* Precondition: Ship is on the screen
* Action: User clicks spacebar or right mouse button when ship at the correct time
* Postcondition: Ship has been hit by the missile and it is detected

# Test 1h - Fail/Unhappy
* Precondition: Ship is on the screen
* Action: User clicks spacebar or right mouse button when ship at the incorrect time
* Postcondition: Ship has not been hit by the missile and it is not detected

# Test 1i - Pass/Happy
* Precondition: Ship is on the screen
* Action: User clicks spacebar or right mouse button when ship at the correct time
* Postcondition: Ship has been hit by the missile and explosion occurs

# Test 1i - Fail/Unhappy
* Precondition: Ship is on the screen
* Action: User clicks spacebar or right mouse button when ship at the incorrect time
* Postcondition: Ship has not been hit by the missile and explosion does not occur

# Test 1j - Pass/Happy
* Precondition: Ship is on the screen
* Action: User clicks spacebar or right mouse button when ship at the correct time
* Postcondition: Ship has been hit by the missile and both the ship and missile are removed

# Test 1j - Fail/Unhappy
* Precondition: Ship is on the screen
* Action: User clicks spacebar or right mouse button when ship at the incorrect time
* Postcondition: Ship has not been hit by the missile and both the ship and missile are still on the screen

# Test 1k
* Precondition: Ship is on the screen
* Action: User clicks spacebar or right mouse button when ship at the correct time
* Postcondition: Ship has been hit by the missile and hit counter increases

# Test 1k
* Precondition: Ship is on the screen
* Action: User clicks spacebar or right mouse button when ship at the incorrect time
* Postcondition: Ship has not been hit by the missile and hit counter stays the same



